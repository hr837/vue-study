/**
 * This file is generated by the RequestConfigGenerator.
 * Do not edit.
 */
import { Request, RequestParams } from "@gopowerteam/http-request";
import { Observable } from "rxjs";
import { UserController } from "@/config/controllers/manage-service/user.controller";

export class UserService {
	/**
	 * 新增用户
	 */
	@Request({
		server: UserController.addUser,
	})
	public addUser(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * APP用户登录
	 */
	@Request({
		server: UserController.appLogin,
	})
	public appLogin(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 通过id删除用户
	 */
	@Request({
		server: UserController.deleteUserById,
	})
	public deleteUserById(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 多条件查询用户
	 */
	@Request({
		server: UserController.findUserByDepartment,
	})
	public findUserByDepartment(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 根据部门code查询用户
	 */
	@Request({
		server: UserController.findUserByDepartmentCode,
	})
	public findUserByDepartmentCode(
		requestParams: RequestParams
	): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 查询用户所分配角色
	 */
	@Request({
		server: UserController.getRoles,
	})
	public getRoles(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 通过token获取用户
	 */
	@Request({
		server: UserController.getUserByToken,
	})
	public getUserByToken(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 通过Id获取用户职位状态
	 */
	@Request({
		server: UserController.getUserStateById,
	})
	public getUserStateById(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 用户登录
	 */
	@Request({
		server: UserController.login,
	})
	public login(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 用户登出
	 */
	@Request({
		server: UserController.logout,
	})
	public logout(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 修改用户
	 */
	@Request({
		server: UserController.modifyUser,
	})
	public modifyUser(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 重置/修改密码
	 */
	@Request({
		server: UserController.resetPassword,
	})
	public resetPassword(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
	/**
	 * 更新密码
	 */
	@Request({
		server: UserController.updatePassword,
	})
	public updatePassword(requestParams: RequestParams): Observable<any> {
		return requestParams.request();
	}
}
